//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.05.07 at 11:29:50 PM CEST 
//


package types;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the entity package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Configuration_QNAME = new QName("", "configuration");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: entity
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ConfigurationType }
     * 
     */
    public ConfigurationType createConfigurationType() {
        return new ConfigurationType();
    }

    /**
     * Create an instance of {@link RotaryStateType }
     * 
     */
    public RotaryStateType createRotaryStateType() {
        return new RotaryStateType();
    }

    /**
     * Create an instance of {@link SwitchType }
     * 
     */
    public SwitchType createSwitchType() {
        return new SwitchType();
    }

    /**
     * Create an instance of {@link AuxShiftRegistersType }
     * 
     */
    public AuxShiftRegistersType createAuxShiftRegistersType() {
        return new AuxShiftRegistersType();
    }

    /**
     * Create an instance of {@link IndicatorStatesType }
     * 
     */
    public IndicatorStatesType createIndicatorStatesType() {
        return new IndicatorStatesType();
    }

    /**
     * Create an instance of {@link PanelsType }
     * 
     */
    public PanelsType createPanelsType() {
        return new PanelsType();
    }

    /**
     * Create an instance of {@link ArduinosType }
     * 
     */
    public ArduinosType createArduinosType() {
        return new ArduinosType();
    }

    /**
     * Create an instance of {@link ArduinoType }
     * 
     */
    public ArduinoType createArduinoType() {
        return new ArduinoType();
    }

    /**
     * Create an instance of {@link SwitchesType }
     * 
     */
    public SwitchesType createSwitchesType() {
        return new SwitchesType();
    }

    /**
     * Create an instance of {@link IndicatorStateType }
     * 
     */
    public IndicatorStateType createIndicatorStateType() {
        return new IndicatorStateType();
    }

    /**
     * Create an instance of {@link MainShiftRegisterType }
     * 
     */
    public MainShiftRegisterType createMainShiftRegisterType() {
        return new MainShiftRegisterType();
    }

    /**
     * Create an instance of {@link RotaryStatesType }
     * 
     */
    public RotaryStatesType createRotaryStatesType() {
        return new RotaryStatesType();
    }

    /**
     * Create an instance of {@link IndicatorsType }
     * 
     */
    public IndicatorsType createIndicatorsType() {
        return new IndicatorsType();
    }

    /**
     * Create an instance of {@link SwitchStatesType }
     * 
     */
    public SwitchStatesType createSwitchStatesType() {
        return new SwitchStatesType();
    }

    /**
     * Create an instance of {@link IndicatorType }
     * 
     */
    public IndicatorType createIndicatorType() {
        return new IndicatorType();
    }

    /**
     * Create an instance of {@link RotaryType }
     * 
     */
    public RotaryType createRotaryType() {
        return new RotaryType();
    }

    /**
     * Create an instance of {@link RotaryEncodersType }
     * 
     */
    public RotaryEncodersType createRotaryEncodersType() {
        return new RotaryEncodersType();
    }

    /**
     * Create an instance of {@link SwitchStateType }
     * 
     */
    public SwitchStateType createSwitchStateType() {
        return new SwitchStateType();
    }

    /**
     * Create an instance of {@link PanelType }
     * 
     */
    public PanelType createPanelType() {
        return new PanelType();
    }

    /**
     * Create an instance of {@link AuxShiftRegisterType }
     * 
     */
    public AuxShiftRegisterType createAuxShiftRegisterType() {
        return new AuxShiftRegisterType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConfigurationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "configuration")
    public JAXBElement<ConfigurationType> createConfiguration(ConfigurationType value) {
        return new JAXBElement<ConfigurationType>(_Configuration_QNAME, ConfigurationType.class, null, value);
    }

}
